#!/bin/sh

# This is the git commit-msg hook. It runs automatically before every commit message gets saved.
# This script is designed to nicely integrate with magit
# But also work on the commandline

# Only execute this script if typos-cli is available
if [ ! -x "$(command -v typos)" ]; then
    exit 0
fi

# Filter to only look at the commit message
output=$(cat "$1" | sed -n '1,/# Please enter the commit message for your changes./p' | head -n -1)

# If commit message is empty no need to continue
# This is necessary for git commit --fixup=<commit>
test -z "$output" && exit 0

# We write this to the file, so we can automatically correct with the -w option
echo "$output" > "$1"

# Although we could use `typos $1`
# I prefer this output as it doesn't clutter the output with the filename
# as that isn't useful
TYPOS=$(cat "$1" | typos -)

# If the "typos" command returns a non-zero exit code, print an error message
# and prompt the user how they want to continue
if [ $? -ne 0 ]; then
    exec < /dev/tty
    echo "$TYPOS"
    echo -e "\nERROR: Commit message has typos.\n"
    read -p "Do you want to continue/correct them? (y/N): " choice
    if [ "$choice" != "y" ]; then
        exit 1
    fi
    read -p "Do you want to automatically correct them? (y/N): " choice
    if [ "$choice" = "y" ]; then
        typos -w $1
        exit 0
    fi
fi
